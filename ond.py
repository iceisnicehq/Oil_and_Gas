import math
metan = 0.891434
etan = 0.039086
propan = 0.018336
h_butan = 0.002606
metilpropan = 0.002386
peptan = 0.000619
gecsan = 0.000681
azot = 0.044545
uglecisliy = 0.00013
geliy = 0.000177

davlenie = 20 #МПа
tempC = -1 #C
tempK = tempC + 273.15

smes = [metan,etan,propan,h_butan,metilpropan,peptan,gecsan,azot,uglecisliy,geliy]
Ki = [0.4619255,0.5279209,0.583749,0.6341423,0.6406937,0.6798307,0.7175118,0.4479153,0.4557489,0.3589888]
Kij = [[1,1,1.007619,0.997596,1,1.002529,0.982962,1.00363,0.995933,1],
       [1,1,0.986893,1,1,1,1,1.00796,1.00851,1],
       [1.007619,0.986893,1,1,1,1,1,1,1,1],
       [0.997596,1,1,1,1,1,1,1,1,1],
       [1,1,1,1,1,1,1,1,1,1],
       [1.002529,1,1,1,1,1,1,1,1,1],
       [0.982962,1,1,1,1,1,1,1,0.910183,1],
       [1.00363,1.00796,1,1,1,1,1,1,0.982361,0.982361],
       [0.995933,1.00851,1,1,1,1,0.910183,0.982361,1,1],
       [1,1,1,1,1,1,1,0.982361,1,1]]
a = [
    0.1538326,
    1.341953,
    -2.998583,
    -0.04831228,
    0.3757965,
    -1.589575,
    -0.05358847,
    0.88659463,
    -0.71023704,
    -1.471722,
    1.32185035,
    -0.78665925,
    0.00000000229129,
    0.1576724,
    -0.4363864,
    -0.04408159,
    -0.003433888,
    0.03205905,
    0.02487355,
    0.07332279,
    -0.001600573,
    0.6424706,
    -0.4162601,
    -0.06689957,
    0.2791795,
    -0.6966051,
    -0.002860589,
    -0.008098836,
    3.150547,
    0.007224479,
    -0.7057529,
    0.5349792,
    -0.07931491,
    -1.418465,
    -5.99905*10**(-17),
    0.1058402,
    0.03431729,
    -0.007022847,
    0.02495587,
    0.04296818,
    0.7465453,
    -0.2919613,
    7.294616,
    -9.936757,
    -0.005399808,
    -0.2432567,
    0.04987016,
    0.003733797,
    1.874951,
    0.002168144,
    -0.6587164,
    0.000205518,
    0.009776195,
    -0.02048708,
    0.01557322,
    0.006862415,
    -0.001226752,
    0.002850908
]
b = [
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1,
    2, 2, 2, 2, 2, 2, 2, 2, 2,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    4, 4, 4, 4, 4, 4, 4,
    5, 5, 5, 5, 5,
    6, 6,
    7, 7,
    8, 8, 8,
    9, 9
]
c = [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 
    1, 1, 1, 1, 1, 1,
    0, 0,
    1, 
    1, 1, 1, 1, 1, 1, 
    0, 
    1, 1, 1, 1, 1, 1, 1, 1, 1,
    0, 0, 
    1, 1, 1, 1, 1,
    0,
    1, 1, 1, 1, 
    0, 
    1, 0,
    1, 1, 1, 1, 1, 1
]
u = [
    0, 
    0.5, 
    1, 
    3.5, 
    -0.5, 
    4.5, 
    0.5, 
    7.5, 
    9.5, 
    6, 
    12, 
    12.5, 
    -6, 
    2, 
    3, 
    2, 
    2, 
    11, 
    -0.5, 
    0.5, 
    0,
    4, 
    6, 
    21, 
    23, 
    22, 
    -1, 
    -0.5, 
    7, 
    -1, 
    6, 
    4, 
    1, 
    9, 
    -13, 
    21, 
    8, 
    -0.5, 
    0, 
    2, 
    7, 
    9, 
    22, 
    23, 
    1, 
    9, 
    3, 
    8, 
    23, 
    1.5, 
    5, 
    -0.5, 
    4, 
    7, 
    3, 
    0, 
    1, 
    0
]
k = [
    0, 
    0, 
    0, 
    0, 
    0, 
    0, 
    0, 
    0, 
    0, 
    0, 
    0, 
    0, 
    3, 
    2, 
    2, 
    2, 
    4, 
    4, 
    0, 
    0, 
    2, 
    2, 
    2, 
    4, 
    4, 
    4, 
    4, 
    0, 
    1, 
    1, 
    2, 
    2, 
    3, 
    3, 
    4, 
    4, 
    4, 
    0, 
    0, 
    2, 
    2, 
    2, 
    4, 
    4, 
    0, 
    2, 
    2, 
    4, 
    4, 
    0, 
    2, 
    0, 
    2, 
    1, 
    2, 
    2, 
    2, 
    2
]
g = []
for i in '0000110000000000000000001000100111000000000000000010010100':
    g.append(int(i))
q = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1]
f = []
for i in '0000000000001000000000000010010000100000000000000000000000':
    f.append(int(i))
Gi = [0, 0.0793, 0.141239, 0.281835, 0.256692, 0.366911, 0.289731, 0.027815, 0.189065, 0]
Gij = [
    [1, 1, 1, 1, 1, 1, 1, 1, 0.807653, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 0.370296, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 0.982746, 1],
    [0.807653, 0.370296, 1, 1, 1, 1, 1, 0.982746, 1, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
]
Qi = [0, 0, 0, 0, 0, 0, 0, 0, 0.69, 0]
Fi = [0,0,0,0,0,0,0,0,0,0]
Ei = [
    151.3183,
    244.1667,
    298.1183,
    337.6389,
    324.0689,
    370.6823,
    402.636293,
    99.73778,
    241.9606,
    2.610111
]
Eij = [
    [1, 1, 0.994635, 0.989844, 1.01953, 0.999268, 1.107274, 0.97164, 0.960644, 1],
    [1, 1, 1.02256, 1.01306, 1, 1.00532, 1, 0.97012, 0.925053, 1],
    [0.994635, 1.02256, 1, 1.0049, 1, 1, 1, 0.945939, 0.960237, 1],
    [0.989844, 1.01306, 1.0049, 1, 1, 1, 1, 0.973384, 0.897362, 1],
    [1.01953, 1, 1, 1, 1, 1, 1, 0.946914, 0.906849, 1],
    [0.999268, 1.00532, 1, 1, 1, 1, 1, 0.94552, 0.859764, 1],
    [1.107274, 1, 1, 1, 1, 1, 1, 1, 0.855134, 1],
    [0.97164, 0.97012, 0.945939, 0.973384, 0.946914, 0.94552, 1, 1, 1.02274, 1],
    [0.960644, 0.925053, 0.960237, 0.897362, 0.906849, 0.859764, 0.855134, 1.02274, 1, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
]
Vij = [
    [1, 1, 0.990877, 0.992291, 1, 1.00367, 1.302576, 0.886106, 0.963827, 1],
    [1, 1, 1.065173, 1.25, 1.25, 1.25, 1, 0.816431, 0.96987, 1],
    [1, 1, 1, 1, 1, 1, 1, 0.915502, 1, 1],
    [1, 1, 1, 1, 1, 1, 1, 0.993556, 1, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 1.066638, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 0.835058, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
]
Si = [0,0,0,0,0,0,0,0,0,0]
s = [0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
Wi = [0,0,0,0,0,0,0,0,0,0]
w = [0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
B0i = [
    4.00088,
    4.00263,
    4.02939,
    4.33944,
    4.06714,
    4.0,
    4.0,
    3.50031,
    3.50002,
    2.50
]
C0i = [
    0.76315,
    4.33939,
    6.60569,
    9.44893,
    8.97575,
    8.95043,
    11.6977,
    0.13732,
    2.04452,
    0.00
]
D0i = [
    820.659,
    559.314,
    479.856,
    468.27,
    438.27,
    178.67,
    182.326,
    662.738,
    919.306,
    0.00
]
E0i = [
    0.0046,
    1.23722,
    3.197,
    6.89406,
    5.25156,
    21.836,
    26.8142,
    -0.1466,
    -1.06044,
    0.00
]
F0i = [
    178.41,
    223.284,
    200.893,
    183.636,
    198.018,
    840.538,
    859.207,
    680.562,
    865.07,
    0.00
]
G0i = [
    8.74432,
    13.1974,
    19.1921,
    24.4618,
    25.1423,
    33.4032,
    38.6164,
    0.90066,
    2.03366,
    0.00
]
H0i = [
    1062.82,
    1031.38,
    955.312,
    1914.1,
    1905.02,
    1774.25,
    1826.59,
    1740.06,
    483.553,
    0.00
]
I0i = [
    -4.46921,
    -6.01989,
    -8.37267,
    14.7824,
    16.1388,
    0,
    0,
    0,
    0.01393,
    0.00
]
J0i = [
    1090.53,
    1071.29,
    1027.29,
    903.185,
    893.765,
    0,
    0,
    0,
    341.109,
    0.00
]

SxiKi = 0
for i in range(10):
    SxiKi += smes[i]*((Ki[i])**(5/2))
SxiKi = SxiKi**2

Sxixj = 0
for i in range(10-1):
    for j in range(i+1,10):
        Sxixj += smes[i]*smes[j]*(Kij[i][j]**5-1)*((Ki[i]*Ki[j])**(5/2))

Kx = (SxiKi + 2*Sxixj)**(1/5)

p0m = 10**(-3)*(Kx**(-3))*8.31451
pi = davlenie/p0m
t = tempK/1

Q = 0
for i in range(10):
    Q += smes[i]*Qi[i]

F = 0
for i in range(10):
    F += (smes[i]**2)*Fi[i]

G = 0
for i in range(10):
    G += smes[i]*Gi[i]
for i in range(10-1):
    for j in range(i+1,10):
        G += smes[i]*smes[j]*(Gij[i][j] - 1)*(Gi[i] + Gi[j])

V = 0
V1 = 0
for i in range(10):
    V1 += smes[i]*(Ei[i]**(5/2))
V1 = V1**2

V2 = 0
for i in range(10-1):
    for j in range(i+1,10):
        V2 += smes[i]*smes[j]*(Vij[i][j]**5-1)*((Ei[i]*Ei[j])**(5/2))
V = (V1 + 2*V2)**(1/5)

U = []
for i in range(12):
    U.append(0)
    
def Cn(n):
    global G,g,Q,q,F,f,V,u
    return (G+1-g[n])**g[n]*((Q**2+1-q[n])**q[n])*((F+1-f[n])**f[n])*(V**u[n])

for i in range(12,58):
    U.append(Cn(i))
    
def Bn(n):
    B = 0
    global smes,u,Ei,Eij,Ki
    for i in range(10):
        for j in range(10):
            B += smes[i]*smes[j]*Bnij(n,i,j)*((Eij[i][j]*((Ei[i]*Ei[j])**(1/2)))**u[n])*((Ki[i]*Ki[j])**(3/2))
    return B
            
def Bnij(n,i,j):
    global Gij,g,Qi,q,Fi,f,Si,s,Wi,w
    return ((Gij[i][j]+1-g[n])**g[n])*((Qi[i]*Qi[j]+1-q[n])**q[n])*((((Fi[i]*Fi[j])**(1/2))+1-f[n])**f[n])*((Si[i]*Si[j]+1-s[n])**s[n])*((Wi[i]*Wi[j]+1-w[n])**w[n])

D = []
for n in range(12):
    D.append(Bn(n)*(Kx**(-3)))
for n in range(12,18):
    D.append(Bn(n)*(Kx**(-3))-Cn(n))
for n in range(18,58):
    D.append(0)

def A0(plotnost):
    global a,b,t,u,D,c,k,U
    A0 = 0
    for n in range(58):
        A0 += a[n]*plotnost**b[n]*t**(-u[n])*(b[n]*D[n]+(b[n]-c[n]*k[n]*plotnost**k[n])*U[n]*math.exp(-c[n]*plotnost**k[n]))
    return A0
def A1(plotnost):
    global a,b,t,u,D,c,k,U
    A1 = 0
    for n in range(58):
        A1 += a[n]*plotnost**b[n]*t**(-u[n])*((b[n]+1)*b[n]*D[n]+((b[n]-c[n]*k[n]*plotnost**k[n])*(b[n]-c[n]*k[n]*plotnost**k[n]+1)-c[n]*k[n]**2*plotnost**k[n])*U[n]*math.exp(-c[n]*plotnost**k[n]))
    return A1
plotnost0 = (10**3*davlenie*Kx**3)/(8.31451*t) #плотность на 0 шаге - приведенная плотность 
def pirash(plotnost):
    global t
    pirash = plotnost*t*(1+A0(plotnost))
    return pirash
while abs((pirash(plotnost0)-pi)/pi) > 10**(-6):
    plotnost0 += ((pi/t) - (1 + A0(plotnost0))*plotnost0)/(1+A1(plotnost0))
def A2(plotnost):
    global a,b,t,u,D,c,k,U
    A2 = 0
    for n in range(58):
        A2 += a[n]*plotnost**b[n]*t**(-u[n])*(1-u[n])*(b[n]*D[n]+(b[n]-c[n]*k[n]*plotnost**k[n])*U[n]*math.exp(-c[n]*plotnost**k[n]))
    return A2
def A3(plotnost):
    global a,b,t,u,D,c,k,U
    A3 = 0
    for n in range(58):
        A3 += a[n]*plotnost**b[n]*t**(-u[n])*u[n]*(1-u[n])*(D[n]+U[n]*math.exp(-c[n]*plotnost**k[n]))
    return A3
A0 = A0(plotnost0)
A1 = A1(plotnost0)
A2 = A2(plotnost0)
A3 = A3(plotnost0)
z = 1 + A0
cp0r = 0
def cp0ri(i):
    global B0i,C0i,D0i,E0i,F0i,G0i,H0i,I0i,J0i,t
    det = t**(-1)
    cp0ri = B0i[i] + C0i[i]*((D0i[i]*det)/math.sinh(D0i[i]*det))**2+E0i[i]*((F0i[i]*det)/math.cosh(F0i[i]*det))**2+G0i[i]*((H0i[i]*det)/math.sinh(H0i[i]*det))**2+I0i[i]*((J0i[i]*det)/math.cosh(J0i[i]*det))**2
    return cp0ri
for i in range(9):
    cp0r += smes[i]*cp0ri(i)
det = t**(-1)
cp0r += smes[9]*(B0i[9] + E0i[9]*((F0i[9]*det)/math.cosh(F0i[9]*det))**2+I0i[9]*((J0i[9]*det)/math.cosh(J0i[9]*det))**2)
kadiabat = ((1 + A1 + (1 + A2)**2)/(cp0r - 1 + A3))/z
print('Показатель адиабаты равен k = ', kadiabat)
